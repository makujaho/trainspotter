upstream kibana {
    server 192.168.255.1:5601;
    keepalive 15;
}

server {
    listen 80;
    server_name kibana.example.com;
    return 301 https://kibana.example.com;
}

server {
    listen 443;
    server_name kibana.example.com;

    ssl on;
    ssl_certificate /path/to/cert;
    ssl_certificate_key /path/to/key;

    location = "/elasticsearch/.kibana/dashboard/_search" {
        proxy_pass http://kibana;
    }

    location = "/elasticsearch/.kibana/search/_search" {
        proxy_pass http://kibana;
    }

    location ~ /elasticsearch/.kibana/search/(.*) {
        auth_basic "Need user password to save search '$1'";
        auth_basic_user_file /etc/nginx/kibana_users.htpasswd;
        proxy_pass http://kibana;
    }

    location ~ "/#/settings/.*" {
        auth_basic "Need user password to access settings";
        auth_basic_user_file /etc/nginx/kibana_users.htpasswd;
        proxy_pass http://kibana;
    }

    location ~ "/elasticsearch/logstash.*" {
        auth_basic "Need user password to access settings";
        auth_basic_user_file /etc/nginx/kibana_users.htpasswd;
        proxy_pass http://kibana;
    }

    location ~ /elasticsearch/.kibana {
        proxy_pass http://kibana;
    }

    location = "/elasticsearch/_nodes" {
        if ($request_method != "GET") {
            return 403;
            break;
        }
        proxy_pass http://kibana;
    }

    location ~ /elasticsearch/_(.*)$ {
        set $reject 'false';
        set $esmethod $1;
        if ($esmethod !~ "^(mget|msearch)$") {
            set $reject 'true';
        }
        if ($request_method != "POST") {
            set $reject 'true';
        }
        if ($reject = 'true') {
            return 403;
            break;
        }
        proxy_pass http://kibana;
    }

    location ~ /elasticsearch/(.*)/_search {
        if ($request_method != "POST") {
            return 403;
            break;
        }
        proxy_pass http://kibana;
    }

    location / {
        if ($request_method != "GET") {
            return 403;
            break;
        }
        proxy_pass http://kibana;
    }
}
